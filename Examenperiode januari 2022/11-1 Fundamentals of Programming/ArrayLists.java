/* ************************** * ArrayList * ************************** */// - geen vaste grootte, groeit mee met aantal items, grootte is onbeperkt// - kan alleen objecten bevatten, geen primitieve types// - Is een klasse, waarvan een object kan worden gemaakt, waarop je methodes kan uitvoeren// importeren: bovenaan de Java klasseimport java.util.ArrayList;// Declareren -> variabelen verwijzen naar nullprivate ArrayList<String> woorden;private ArrayList<Persoon> personen;private ArrayList<Loopsessie> loopsessies;// kan niet: private ArrayList<int> getallen;// Initialiserenwoorden = new ArrayList<>();personen = new ArrayList<>();loopsessies = new ArrayList<>();// Toevoegenwoorden.add("one");woorden.add("two");woorden.add("three");personen.add(new Persoon("Joe"));personen.add(new Persoon("Jack"));// Aanpassenpersonen.get(0).setName("William");// of mbv de .set(index, object) methode (hebben we eigenlijk niet gezien)woorden.set(0, "een");woorden.set(1, "twee");woorden.set(2, "drie");// Verwijderen - niet in een loop: .remove()ArrayList<Student> studenten = new ArrayList<>();Student jill = new Student("Jill");studenten.add(jill);studenten.remove(jill);studenten.add(jill);studenten.remove(0);// OpvragenPersoon persoon = personen.get(0);// Het aantal elementen in de ArrayList opvragenint aantalElementen = personen.size();// Iteratorimport java.util.Iterator;Iterator<Student> it = studenten.iterator();boolean isErEenVolgendElementInDeLijst = it.hasNext();Student student = it.next();// Overlopen// - for-loopfor(int i = 0; i < personen.size(); i++){	Persoon persoon = personen.get(i);	System.out.println((i+1) + " " + persoon.getName());}// - for-eachfor(Persoon persoon : personen){	System.out.println(persoon.getName());}// - while met index: vroegtijdig afbrekenint i = 0;Persoon jack = null;while(i < personen.size() && jack == null){	Persoon persoon = personen.get(i);	if(persoon.getName().equals("Jack")){		jack = persoon;	}	i++;}// - while met iteratorIterator<Persoon> it = personen.iterator();while(it.hasNext()){	Persoon persoon = it.next();	if(persoon.getAge() <= 12){		System.out.println(persoon.getName()):	}}// Verwijderen in loop met behulp van iteratorArrayList<Student> studenten = new ArrayList<>();Student jill = new Student(34, "Jill");studenten.add(jill);Iterator<Student> it = studenten.iterator();while(it.hasNext()){	Student student = it.next();	if(student.getId() == 34){		it.remove();	}}// Exceptions?// - ConcurrentModificationExceptionfor(String woord : woorden){	woorden.remove(woord);}// - IndexOutOfBoundsException//     -> indien je werkt met index: index >= 0 && index < lijst.size()